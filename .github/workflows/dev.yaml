name: Publish_DEV

env:
  branch-name: 'develop'
  varrible: 'DEV_VERSION'

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
  workflow_run:
    workflows: ["Publish"] 
    types:
      - completed

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-version:
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.version.outputs.newVersion }}
      versionCode: ${{ steps.version.outputs.versionCode }}
      minorVersion: ${{ steps.version.outputs.minorVersion }}
    steps:
      - name: Get the current version using GitHub CLI
        id: get-version
        run: |
          VERSION=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/variables/DEV_VERSION \
            --jq '.value')
          echo "Current version: $VERSION"
          if [[ -z "$VERSION" ]]; then
            echo "Error: VERSION is empty"
            exit 1
          fi
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          echo "MAJOR=$MAJOR" >> $GITHUB_ENV
          echo "MINOR=$MINOR" >> $GITHUB_ENV
          echo "PATCH=$PATCH" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}

      - name: Increment the MINOR version
        id: increment-minor
        run: |
          NEW_PATCH=$((PATCH + 1))
          echo "New MINOR version: $NEW_PATCH"
          echo "new-minor=$NEW_PATCH" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}

      - name: Update the version using GitHub CLI
        id: version
        run: |
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "Updating version to: $NEW_VERSION"
          echo "newVersion=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "versionCode=$MAJOR" >> $GITHUB_OUTPUT
          echo "minorVersion=$MINOR" >> $GITHUB_OUTPUT
          echo newVersion: $NEW_VERSION
          echo versionCode: $MAJOR
          echo minorVersion: $MINOR
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/variables/DEV_VERSION \
            -f "name=DEV_VERSION" -f "value=$NEW_VERSION"
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
          NEW_PATCH: ${{ env.new-minor }}    

  build-apk:
    runs-on: [windows-latest]
    needs: prepare-version
    steps:
      - name: Fix Git Safe Directory (Windows)
        run: git config --global --add safe.directory "${{ github.workspace }}"
        shell: cmd

      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Debug Output Values
        run: |
          echo New Version: ${{ needs.prepare-version.outputs.newVersion }}
          echo Version Code: ${{ needs.prepare-version.outputs.versionCode }}
        shell: cmd