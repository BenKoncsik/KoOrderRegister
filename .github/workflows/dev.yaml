name: Publish_DEV

env:
  branch-name: 'develop'
  varrible: 'DEV_VERSION'

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
  workflow_run:
    workflows: ["Publish"] 
    types:
      - completed

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-version:
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.version.outputs.newVersion }}
      versionCode: ${{ steps.version.outputs.versionCode }}
      minorVersion: ${{ steps.version.outputs.minorVersion }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          clean: true

      - name: Manually initialize Git repository
        run: |
          git init
          git remote add origin https://github.com/${{ github.repository }}.git
          git fetch --depth=1 origin ${{ github.ref }}
          git reset --hard FETCH_HEAD
        shell: cmd

  build-apk:
    runs-on: [windows-latest]
    needs: prepare-version
    steps:
      - name: Cleanup runner workspace
        run: cmd /c "rd /s /q D:\git_runner\actions-runner\_work\KoOrderRegister\KoOrderRegister"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          clean: true

      - name: Debug Output Values
        run: |
          echo "New Version: ${{ needs.prepare-version.outputs.newVersion }}"
          echo "Version Code: ${{ needs.prepare-version.outputs.versionCode }}"

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install .NET MAUI Android workloads
        run: dotnet workload install maui-android

      - name: Install .NET SDK maui
        run: dotnet workload install maui

      - name: Run APK build script
        run: cmd /c ".\build_apk.bat"
        env:
          KEYPASS: ${{ secrets.KEYPASS }}
          NEW_VERSION: ${{ needs.prepare-version.outputs.newVersion }}
          NEW_VERSION_CODE: ${{ needs.prepare-version.outputs.versionCode }}
          BUILD_VERSION: ${{ env.varrible }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifact
          path: output\*.apk

  release:
    runs-on: [self-hosted, Windows]
    needs: [prepare-version, build-apk]
    steps:
      - name: Cleanup runner workspace
        run: cmd /c "rd /s /q D:\git_runner\actions-runner\_work\KoOrderRegister\KoOrderRegister"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          clean: true

      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: apk-artifact

      - name: Move APK Artifact
        run: cmd /c "move *.apk output\"

      - name: Create or Update Release
        uses: softprops/action-gh-release@v1
        with:
          files: output/*.apk
          tag_name: ${{ needs.prepare-version.outputs.versionCode }}.${{ needs.prepare-version.outputs.minorVersion }}
          release_name: ${{ needs.prepare-version.outputs.newVersion }}
          body_path: Technical/release_base.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}