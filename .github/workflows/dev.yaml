name: Publish_DEV

env:
  branch-name: 'develop'
  varrible: 'DEV_VERSION'

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
  workflow_run:
    workflows: ["Publish"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-version:
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.version.outputs.newVersion }}
      versionCode: ${{ steps.version.outputs.versionCode }}
      minorVersion: ${{ steps.version.outputs.minorVersion }}
    steps:
      # 1) Beállítjuk a safe directory-t a futó user globális configjában (Linux/Bash).
      - name: Configure Git safe directory (Ubuntu)
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          clean: true

      - name: Manually initialize Git repository
        run: |
          git init
          git remote remove origin || true
          git remote add origin https://github.com/${{ github.repository }}.git
          git fetch --depth=1 origin refs/heads/develop
          git reset --hard FETCH_HEAD

      # Példa lépés, ha kalkulálod a version, versionCode, minorVersion értékeket:
      # - name: Calculate version
      #   id: version
      #   run: ...
      #
      # A fenti kimeneteket a job outputja továbbadja:
      # newVersion: ${{ steps.version.outputs.newVersion }}
      # versionCode: ${{ steps.version.outputs.versionCode }}
      # minorVersion: ${{ steps.version.outputs.minorVersion }}

  build-apk:
    runs-on: windows-latest
    needs: prepare-version
    steps:
      # 1) (Opcionális) Töröljük a workspace-et, ha létezik
      - name: Cleanup runner workspace
        run: |
          if exist D:\git_runner\actions-runner\_work\Ko0rderRegister\Ko0rderRegister (
            rd /s /q D:\git_runner\actions-runner\_work\Ko0rderRegister\Ko0rderRegister
          ) else (
            echo "Directory not found"
          )
        shell: cmd

      # 2) Állítsuk be a Git safe directory-t, mielőtt a checkout dolgozik
      - name: Configure Git safe directory (Windows)
        run: |
          git config --global --add safe.directory "D:/git_runner/actions-runner/_work/Ko0rderRegister/Ko0rderRegister"
        shell: cmd

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          clean: true

      - name: Debug Output Values
        run: |
          echo New Version: ${{ needs.prepare-version.outputs.newVersion }}
          echo Version Code: ${{ needs.prepare-version.outputs.versionCode }}
        shell: cmd

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install .NET MAUI Android workloads
        run: dotnet workload install maui-android
        shell: cmd

      - name: Install .NET SDK maui
        run: dotnet workload install maui
        shell: cmd

      - name: Run APK build script
        run: .\build_apk.bat
        shell: cmd
        env:
          KEYPASS: ${{ secrets.KEYPASS }}
          NEW_VERSION: ${{ needs.prepare-version.outputs.newVersion }}
          NEW_VERSION_CODE: ${{ needs.prepare-version.outputs.versionCode }}
          BUILD_VERSION: ${{ env.varrible }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifact
          path: output\*.apk

  release:
    runs-on: [self-hosted, Windows]
    needs: [prepare-version, build-apk]
    steps:
      # 1) Opcionális törlés, ha még maradt korábbi workspace
      - name: Cleanup runner workspace
        run: |
          if exist D:\git_runner\actions-runner\_work\Ko0rderRegister\Ko0rderRegister (
            rd /s /q D:\git_runner\actions-runner\_work\Ko0rderRegister\Ko0rderRegister
          ) else (
            echo "Directory not found"
          )
        shell: cmd

      # 2) Biztonságos könyvtár beállítása
      - name: Configure Git safe directory (Self-hosted Windows)
        run: |
          git config --global --add safe.directory "D:/git_runner/actions-runner/_work/Ko0rderRegister/Ko0rderRegister"
        shell: cmd

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          clean: true

      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: apk-artifact

      - name: Move APK Artifact
        run: move *.apk output\
        shell: cmd

      - name: Create or Update Release
        uses: softprops/action-gh-release@v1
        with:
          files: output/*.apk
          tag_name: ${{ needs.prepare-version.outputs.versionCode }}.${{ needs.prepare-version.outputs.minorVersion }}
          release_name: ${{ needs.prepare-version.outputs.newVersion }}
          body_path: Technical/release_base.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}