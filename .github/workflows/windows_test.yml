name: Windows-test

env:
  branch-name: '92-create-github-runner'  

on:
  push:
    branches: 
      - 92-create-github-runner  
  pull_request:
    branches: 
      - 92-create-github-runner 

jobs:   
 prepare-version:
    runs-on: [self-hosted, Linux]
    outputs:
      new-version: ${{ steps.version.outputs.new-version }} 
      versionCode: ${{ steps.version.outputs.versionCode }}
    steps:
      - uses: actions/checkout@v3
      - name: Show version.txt content
        run: cat version.txt
      - name: Read Version
        id: version  
        run: |
          awk -F'.' '{print $1 "." ($2 + 1) "." $3}' version.txt > temp_version.txt && mv temp_version.txt version.txt
          MAJOR=$(awk -F'.' '{print $1}' version.txt)
          MINOR=$(awk -F'.' '{print $2}' version.txt)
          PATCH=$(awk -F'.' '{print $3}' version.txt)
          VERSION_CODE=$((MAJOR * 10000 + MINOR * 100 + PATCH))
          echo "::set-output name=new-version::$MAJOR.$MINOR.$PATCH"
          echo "::set-output name=versionCode::$MAJOR"
          echo "Current version: $MAJOR.$MINOR.$PATCH"
          echo "Version Code: $MAJOR"
      - name: Commit and Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add version.txt
          git commit -m "Update version to $MAJOR.$MINOR.$PATCH" 
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ env.branch-name }}    
 build:
    runs-on: [self-hosted, Windows]Å±
    needs: prepare-version
    steps:
    - uses: actions/checkout@v2
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'  
    - name: Install Certificate with Admin Privileges
      run: |
        Start-Process powershell -ArgumentList "Import-PfxCertificate -FilePath KoOrderRegister\Technical\kor.pfx -CertStoreLocation Cert:\LocalMachine\My -Password (ConvertTo-SecureString -String kor -Force -AsPlainText)" -Verb RunAs
      shell: powershell

    - name: Install .NET MAUI workloads
      run: dotnet workload install maui-android
    - name: Run build script
      run: cmd /c ".\build.bat"
      env:
        KEYPASS: ${{ secrets.KEYPASS }}
        NEW_VERSION: ${{ steps.version.outputs.new-version }} 
        NEW_VERSION_CODE: ${{ steps.version.outputs.versionCode }} 